@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation

<CascadingAuthenticationState>
<header>
  <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
    <div class="container">
      <NavLink class="navbar-brand" href="">Tic Tac Two</NavLink>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
              aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
        <ul class="navbar-nav flex-grow-1">
          <li class="nav-item">
            <NavLink class="nav-link text-dark" href="">Home</NavLink>
          </li>
          <li class="nav-item">
            <NavLink class="nav-link text-dark" href="/download">Download (Console version)</NavLink>
          </li>
          <li class="nav-item">
            <NavLink class="nav-link text-dark" href="/about">About us</NavLink>
          </li>
        </ul>
        <div class="d-flex align-items-center ms-auto gap-3">
          @if (isAuthenticated)
          {
            <span>Welcome back, @username</span>
          }
          <NavLink class="nav-link text-dark" href="profile">
            <button class="btn btn-primary"><i class="fa-solid fa-user"></i></button>
          </NavLink>
        </div>
      </div>
    </div>
  </nav>
</header>
</CascadingAuthenticationState>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private string? username;
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;

        isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        if (isAuthenticated)
        {
            username = user.Identity?. Name;
            username ??= user.FindFirst("sub")?.Value;
        }
    }
}
