@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject NavigationManager Nav


<div class="container">
    <div class="row">
        <a asp-page="/NewGame" class="home-menu-link col-6 col-sm-6 col-md-12 col-lg-12">
            <button @onclick="OnNewGameClicked" class="home-menu-item btn btn-primary mb-2">
                <span class="text-main">New Game</span>
                <div class="extra-content">
                    <span class="extra-text">Start new game with any modes and configs</span>
                </div>
            </button>
        </a>
        <a asp-page="/LoadGame" class="home-menu-link col-6 col-sm-6 col-md-12 col-lg-12">
            <button @onclick="OnLoadGameClicked" class="home-menu-item btn btn-primary mb-2">
                <span class="text-main">Load Game</span>
                <div class="extra-content">
                    <span class="extra-text">Load saved game to continue your game</span>
                </div>
            </button>
        </a>
        <a class="home-menu-link col-6 col-sm-6 col-md-12 col-lg-12">
            <button type="button" class="home-menu-item btn btn-primary mb-2" @onclick="() => IsModalOpen = true">
                <span class="text-main">Connect to Game</span>
                <div class="extra-content">
                    <span class="extra-text">Connect to game via session id</span>
                </div>
            </button>
        </a>
        <a asp-page="/Configs" class="home-menu-link col-6 col-sm-6 col-md-12 col-lg-12">
            <button @onclick="OnGameConfigsClicked" class="home-menu-item btn btn-primary mb-2">
                <span class="text-main">Game Configurations</span>
                <div class="extra-content">
                    <span class="extra-text">Create or edit configs. Make your own game</span>
                </div>
            </button>
        </a>
    </div>
</div>

<!-- Modal for connecting to game -->
@if (IsModalOpen)
{
<div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
    <div class="modal-dialog">
        <div class="modal-content">
            <EditForm Model="FormModel" OnValidSubmit="ConnectToSession">
                <DataAnnotationsValidator />
                <div class="modal-header">
                    <h1 class="modal-title fs-5">Enter Game Id to connect</h1>
                    <button type="button" class="btn-close" @onclick="() => IsModalOpen = false" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <InputText @bind-Value="FormModel.SessionId" class="form-control" placeholder="Type here..." />
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Continue</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>
}

@code {
    [Parameter] public EventCallback OnNewGame { get; set; }
    [Parameter] public EventCallback OnLoadGame { get; set; }
    [Parameter] public EventCallback OnGameConfigs { get; set; }

    private Task OnNewGameClicked() => OnNewGame.InvokeAsync();
    private Task OnLoadGameClicked() => OnLoadGame.InvokeAsync();
    private Task OnGameConfigsClicked() => OnGameConfigs.InvokeAsync();

    private string SessionIdInput { get; set; } = "";
    private bool IsModalOpen { get; set; } = false;
    private ConnectModel FormModel = new();

    private async Task ConnectToSession()
    {
        if (!string.IsNullOrWhiteSpace(FormModel.SessionId))
        {
            IsModalOpen = false;
            Nav.NavigateTo($"/game-online/{FormModel.SessionId}");
        }
    }
    
    private class ConnectModel
    {
        public string SessionId { get; set; } = "";
    }

}
