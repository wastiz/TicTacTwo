@page "/new-game"
@attribute [Authorize]
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization
@using Shared.GameConfigDtos
@inject HttpClient Http
@inject IJSRuntime JS

<EditForm Model="@gameModel" OnValidSubmit="HandleValidSubmit" class="container h-100 d-flex flex-column">
    <button @onclick="OnMainOptions" class="btn btn-primary">Back</button>
    <div class="row">
        <h3>Choose Game Mode:</h3>
        <div class="btn-group d-flex flex-column" role="group">
            @foreach (var mode in GameModes)
            {
                <button type="button"
                        class="btn @(gameModel.GameMode == mode.Value ? "btn-primary" : "btn-outline-primary") mb-2"
                        @onclick="() => ToggleSelection(mode.Value)">
                    @mode.Label
                </button>
            }
        </div>

        <h3>Choose Game Configuration:</h3>
        <div class="col-12">
            <InputRadioGroup @bind-Value="gameModel.ConfigId">
                <InputRadio id="classic" Value=@("classic")/>
                <label class="btn" for="classic">Classical</label>

                <InputRadio id="big-game" Value=@("big-game")/>
                <label class="btn" for="big-game">Big Game</label>

                @foreach (var config in ConfigList)
                {
                    <InputRadio id="@config.Id" Value="@config.Id"/>
                    <label class="btn" for="@config.Id">@config.Name</label>
                }
            </InputRadioGroup>
        </div>

        <div class="col-12 mt-5">
            <button type="submit" class="btn btn-primary">Start Game</button>
        </div>
    </div>
</EditForm>

@code {
    private GameModel gameModel = new GameModel
    {
        GameMode = "two-players",
        ConfigId = "classic"
    };
    
    [Parameter] public List<GameConfig> ConfigList { get; set; }
    [Parameter] public EventCallback OnMainOptions { get; set; }
    private Task OnNewGameClicked() => OnMainOptions.InvokeAsync();

    private void ToggleSelection(string value)
    {
        if (gameModel.GameMode == value)
            gameModel.GameMode = null;
        else
            gameModel.GameMode = value;
    }

    private void HandleValidSubmit()
    {
        Console.WriteLine($"Starting game mode: {gameModel.GameMode}, config: {gameModel.ConfigId}");
    }
    
    private List<(string Value, string Label)> GameModes = new()
    {
        ("two-players", "Local Game"),
        ("two-players-online", "Online Game"),
        ("vs-ai", "vs AI (coming soon)"),
        ("ai-vs-ai", "AI vs AI (coming soon)")
    };

    public class GameModel
    {
        [Required]
        public string GameMode { get; set; }

        [Required]
        public string ConfigId { get; set; }
    }
}
